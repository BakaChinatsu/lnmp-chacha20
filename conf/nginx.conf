user  www www;

worker_processes auto;

error_log  /home/wwwlogs/nginx_error.log  crit; #请自行创建此文件，否则请用井号注释该行

pid        /usr/local/nginx/logs/nginx.pid;

#Specifies the value for maximum file descriptors that can be opened by this process.
worker_rlimit_nofile 51200;

events
    {
        use epoll;
        worker_connections 51200;
        multi_accept on;
    }

http
    {
        include       mime.types;
        default_type  application/octet-stream;

            #启用SSL缓存，加快页面加载速度
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;
            ssl_buffer_size 8k;
            ssl_stapling on;
            ssl_stapling_verify on;

        server_names_hash_bucket_size 128;
        client_header_buffer_size 32k;
        large_client_header_buffers 4 32k;
        client_max_body_size 50m;

        sendfile on;
        tcp_nopush     on;

        keepalive_timeout 60;

        tcp_nodelay on;

        fastcgi_connect_timeout 300; #如果你不使用FastCGI，请用井号注释该段每一行
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 4 64k;
        fastcgi_busy_buffers_size 128k;
        fastcgi_temp_file_write_size 256k;

        gzip on; #如果你不使用GZip，请用井号注释该段每一行
        gzip_min_length  1k;
        gzip_buffers     4 16k;
        gzip_http_version 1.0;
        gzip_comp_level 2;
        gzip_types       text/plain application/x-javascript text/css application/xml;
        gzip_vary on;
        gzip_proxied        expired no-cache no-store private auth;
        gzip_disable        "MSIE [1-6]\.";

        #limit_conn_zone $binary_remote_addr zone=perip:10m;
        ##If enable limit_conn_zone,add "limit_conn perip 10;" to server section.

        server_tokens off;
        #log format
        log_format  access  '$remote_addr - $remote_user [$time_local] "$request" '
             '$status $body_bytes_sent "$http_referer" '
             '"$http_user_agent" $http_x_forwarded_for';

#如果你要使用多个虚拟主机，请取消下面的注释，并将配置文件按照规定的规则命名。
#include vhost/*.conf;
#此处给一个使用反代服务器的范例
    server{
        listen 443 ssl http2;#启用IPv6,HTTP/2,(不是忘了写80，80的在下面
            listen [::]:443 ssl http2;#启用IPv6,HTTP/2
        server_name uuz.moe;#主机名，别忘了改
        index index.htm index.php index.html;
            root /home/wwwroot/default;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
            location ~ .*\.php(\/.*)*$
                    {#这里使用了FastCGI，反向代理的例子请参考下方
                            # comment try_files $uri =404; to enable pathinfo
                            #try_files $uri =404;
                            fastcgi_pass  unix:/tmp/php-cgi.sock;
                            fastcgi_index index.php;
                            fastcgi_param HTTPS $https if_not_empty;
                            include fastcgi.conf;
                            include pathinfo.conf;
                    }
        ssl_ciphers CHACHA20:GCM:HIGH:!DH:!RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS; #使用强加密密钥列表
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload"; #启用HSTS，并包含子域名，允许将本站加入浏览器HSTS预配置列表

        ssl_prefer_server_ciphers on; #启用服务器端建议加密方法列表
        #注意!当http2与ssl_prefer_server_ciphers_on同时使用时会导致Ubuntu x14.04_LTS操作系统下的网络程序无法与服务器建立连接，单独使用则无问题
        
        ssl_certificate /path/baka/public.crt; #SSL证书公钥
        ssl_certificate_key /path/baka/private.key;#SSL证书私钥
    pagespeed on;#使用PageSpeed
    pagespeed FileCachePath /usr/local/nginx/pagespeed_tmp;#PageSpeed缓存目录，请自行建立
    pagespeed RewriteLevel CoreFilters;
    pagespeed EnableFilters local_storage_cache;
    pagespeed EnableFilters collapse_whitespace,remove_comments;
    pagespeed EnableFilters outline_css;
    pagespeed EnableFilters flatten_css_imports;
    pagespeed EnableFilters move_css_above_scripts;
    pagespeed EnableFilters move_css_to_head;
    pagespeed EnableFilters outline_javascript;
    pagespeed EnableFilters combine_javascript;
    pagespeed EnableFilters combine_css;
    pagespeed EnableFilters rewrite_javascript;
    pagespeed EnableFilters rewrite_css,sprite_images;
    pagespeed EnableFilters rewrite_style_attributes;
    pagespeed EnableFilters recompress_images;
    pagespeed EnableFilters resize_images;
    pagespeed EnableFilters convert_meta_tags;
    location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" { add_header "" ""; }
    location ~ "^/ngx_pagespeed_static/" { }
    location ~ "^/ngx_pagespeed_beacon$" { }
    location /ngx_pagespeed_statistics { allow 127.0.0.1; deny all; }
    location /ngx_pagespeed_message { allow 127.0.0.1; deny all; }
    }
    server {#好吧，Undeniably，下面这个真的是天朝特色，我们必须去为这个烂到不能再烂的搜索引擎搞特殊，单独做优化。。。
            listen 80;#监听80端口
            listen [::]:80;#启用IPv6
            server_name uuz.moe;#主机名，这里也要改
            if ($http_user_agent !~* "qihoobot|Baiduspider|BingBot|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot")
                    {#如果UA不在列表里，立即301到HTTPS
                            rewrite ^(.*)$  https://$host$1 permanent;
                            break;
                    }
            location / {#这就是反向代理的例子了
                    proxy_pass    https://127.0.0.1/;#反代HTTPS站点
                    proxy_redirect default;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header User-Agent $http_user_agent;
                    proxy_set_header Via-Proxy "true";
            }
    }
}